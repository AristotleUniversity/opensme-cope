package eu.opensme.cope.recommenders.entities;
// Generated 11 ��� 2011 11:25:48 �� by Hibernate Tools 3.2.1.GA

import javax.persistence.OneToOne;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import static javax.persistence.GenerationType.IDENTITY;

/**
 * Logs generated by hbm2java
 */
@Entity
@Table(name = "logs", catalog = "dependencies")
public class Log implements java.io.Serializable {

    private Long logid;
    private Project project;
    private Set<Logentry> logentries = new HashSet(0);

    public Log() {
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "logid", unique = true, nullable = false)
    public Long getLogid() {
        return this.logid;
    }

    public void setLogid(Long logid) {
        this.logid = logid;
    }

    @OneToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "projectid", nullable = false, insertable = false, updatable = false)
    public Project getProject() {
        return this.project;
    }

    public void setProject(Project project) {
        this.project = project;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "logs")
    public Set<Logentry> getLogentries() {
        return this.logentries;
    }

    public void setLogentries(Set<Logentry> logentries) {
        this.logentries = logentries;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        Long id = this.getLogid();
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Log)) {
            return false;
        }
        Log other = (Log) object;
        Long id = this.getLogid();
        Long otherId = other.getLogid();
        if ((id == null && otherId != null) || (id != null && !id.equals(otherId))) {
            return false;
        }
        return true;
    }
}
