/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * InterfaceMakerPanel.java
 *
 * Created on Aug 24, 2011, 2:39:47 PM
 */
package eu.opensme.cope.ui;

import eu.opensme.cope.componentmakers.ComponentMaker;
import eu.opensme.cope.componentmakers.common.BinaryFileNotFoundException;
import eu.opensme.cope.componentmakers.common.ReuseProjectNotSetException;
import eu.opensme.cope.componentmakers.common.SourceFileNotFoundException;
import eu.opensme.cope.componentmakers.interfacemaker.InterfaceMakerWithAntBuild;
import eu.opensme.cope.domain.ReuseProject;
import eu.opensme.cope.recommenders.entities.ClassAnalysis;
import eu.opensme.cope.recommenders.entities.ClassCluster;
import eu.opensme.cope.recommenders.entities.ClassClusterPartcipant;
import java.awt.FlowLayout;
import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author sskalist
 */
public class InterfaceMakerPanel extends javax.swing.JPanel {

    private ReuseProject reuseProject;
    private HashMap<String, HashSet<String>> clusterToFiles;
    private HashMap<String, HashSet<String>> typeToClusters;
    private ComponentMaker maker;

    /** Creates new form InterfaceMakerPanel */
    public InterfaceMakerPanel() {
        initComponents();
    }

    public InterfaceMakerPanel(ReuseProject reuseProject) {
        this.reuseProject = reuseProject;
        ComponentMaker.setProject(reuseProject);
        this.maker = new InterfaceMakerWithAntBuild();
//        rootPath = reuseProject.getProjectLocation() + File.separator + "clusters";
        clusterToFiles = new HashMap<String, HashSet<String>>();
        typeToClusters = new HashMap<String, HashSet<String>>();
        populateClusters();
//        populateClusters(rootPath + File.separator + "patClusters");
        initComponents();
        showClusterTypes();
        generatedFilesArea.setVisible(false);
        this.repaint();
    }

    private void populateClusters() {
        List<ClassCluster> clusters = this.reuseProject.getClusters();
        for(ClassCluster cluster :clusters)
        {
            String clusterType = cluster.getClass().getSimpleName();
            if(!typeToClusters.containsKey(clusterType))
                typeToClusters.put(clusterType, new HashSet<String>());
            typeToClusters.get(clusterType).add(cluster.getName());
            for(ClassClusterPartcipant participant: cluster.getClusterParticipants())
            {
                if(!clusterToFiles.containsKey(cluster.getName()))
                    clusterToFiles.put(cluster.getName(), new HashSet<String>());
                String className = ClassAnalysis.classAnalysisToSrcPath(participant.getClassAnalysis(),reuseProject.getSrcDir());
                clusterToFiles.get(cluster.getName()).add(className);
            }
        }
    }

    private void showClusterTypes() {
        List<String> clusterTypes = new ArrayList<String>(typeToClusters.keySet());
        Collections.sort(clusterTypes);
        DefaultListModel model = new DefaultListModel();
        clustersTypesList.setModel(model);
        for (String cluster : clusterTypes) {
            model.addElement(cluster);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TopBottomPanel = new javax.swing.JSplitPane();
        ListsButtonPanel = new javax.swing.JSplitPane();
        jPanel3 = new javax.swing.JPanel();
        generateButton = new javax.swing.JButton();
        showFiles = new javax.swing.JButton();
        componentNameLabel = new javax.swing.JLabel();
        componentNameField = new javax.swing.JTextField();
        ClusterClassesPanel = new javax.swing.JSplitPane();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        clustersLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        clustersList = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        classesLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        classesList = new javax.swing.JList();
        jPanel4 = new javax.swing.JPanel();
        clustersTypeLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        clustersTypesList = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        generatedFilesArea = new javax.swing.JTextArea();

        TopBottomPanel.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        ListsButtonPanel.setResizeWeight(1.0);

        generateButton.setText("Generate Interfaces");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        showFiles.setText("Show Generated Files >>");
        showFiles.setEnabled(false);
        showFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showFilesActionPerformed(evt);
            }
        });

        componentNameLabel.setText("Component Name");

        componentNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                componentNameFieldFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(componentNameLabel)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(showFiles, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(generateButton, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(componentNameField, javax.swing.GroupLayout.Alignment.TRAILING))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(148, Short.MAX_VALUE)
                .addComponent(componentNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(componentNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(generateButton)
                .addGap(49, 49, 49)
                .addComponent(showFiles)
                .addContainerGap())
        );

        ListsButtonPanel.setRightComponent(jPanel3);

        ClusterClassesPanel.setResizeWeight(0.33);

        jSplitPane1.setResizeWeight(0.5);

        clustersLabel.setText("Clusters");

        clustersList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        clustersList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                clustersListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(clustersList);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(clustersLabel)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(clustersLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
        );

        jSplitPane1.setLeftComponent(jPanel1);

        classesLabel.setText("Classes in Cluster");

        classesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        classesList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                classesListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(classesList);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(classesLabel)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(classesLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
        );

        jSplitPane1.setRightComponent(jPanel2);

        ClusterClassesPanel.setRightComponent(jSplitPane1);

        clustersTypeLabel.setText("Cluster Type");

        clustersTypesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        clustersTypesList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                clustersTypesListValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(clustersTypesList);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 182, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clustersTypeLabel)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 323, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(clustersTypeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
        );

        ClusterClassesPanel.setLeftComponent(jPanel4);

        ListsButtonPanel.setLeftComponent(ClusterClassesPanel);

        TopBottomPanel.setTopComponent(ListsButtonPanel);

        generatedFilesArea.setColumns(20);
        generatedFilesArea.setEditable(false);
        generatedFilesArea.setRows(5);
        jScrollPane3.setViewportView(generatedFilesArea);

        TopBottomPanel.setRightComponent(jScrollPane3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TopBottomPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TopBottomPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void clustersListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_clustersListValueChanged
        if (clustersList.getSelectedValue() != null) {
            this.generateButton.setEnabled(true);
            HashSet<String> files = clusterToFiles.get(clustersList.getSelectedValue().toString());
            DefaultListModel model = new DefaultListModel();

            for (String javaFilename : files) {
               model.addElement(javaFilename.substring(javaFilename.lastIndexOf(File.separator) +1, javaFilename.length()));
            }
            classesList.setModel(model);
            this.componentNameField.setText(clustersList.getSelectedValue().toString());
        } else {
            this.generateButton.setEnabled(false);
        }
    }//GEN-LAST:event_clustersListValueChanged

    private void classesListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_classesListValueChanged
        String className = classesList.getSelectedValue().toString();
        className = className.substring(0, className.length()-5); // Remove the .java extension
        this.componentNameField.setText(className);
    }//GEN-LAST:event_classesListValueChanged

    private void showFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showFilesActionPerformed
        if (this.generatedFilesArea.isVisible()) {
            generatedFilesArea.setVisible(false);
            this.showFiles.setText("Show Generated Files >>");
        } else {
            generatedFilesArea.setVisible(true);
            this.generatedFilesArea.setText("");
            for (String filename : maker.getGeneratedFiles()) {
                this.generatedFilesArea.append(filename + "\n");
            }
            this.showFiles.setText("Show Generated Files <<");
        }
        this.invalidate();
        ((JDialog) this.getParent().getParent().getParent()).doLayout();
//        ((JDialog)this.getParent().getParent().getParent()).pack();
    }//GEN-LAST:event_showFilesActionPerformed

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        JDialog waitDialog = new JDialog((JDialog) this.getParent().getParent().getParent(), "Generating Files...");
        waitDialog.setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE);

        JComponent newContentPane = new JPanel();
        newContentPane.setLayout(new FlowLayout());
        newContentPane.add(new JLabel("Please wait while generating files..."));
        waitDialog.setContentPane(newContentPane);
        waitDialog.pack();
        waitDialog.setEnabled(true);
        waitDialog.setVisible(true);
        
        for (Object cluster : clustersList.getSelectedValues()) {
            try {
                HashSet<String> files = this.clusterToFiles.get(cluster.toString());
                String componentName = this.componentNameField.getText();
                if(componentName == null || componentName.isEmpty())
                    componentName = cluster.toString();
                maker.makeComponent(componentName,files);
                this.componentNameField.setText(null);
            } catch (BinaryFileNotFoundException ex) {
                Logger.getLogger(InterfaceMakerPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SourceFileNotFoundException ex) {
                Logger.getLogger(InterfaceMakerPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ReuseProjectNotSetException ex) {
                Logger.getLogger(InterfaceMakerPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.showFiles.setEnabled(true);
        }
        waitDialog.dispose();
    }//GEN-LAST:event_generateButtonActionPerformed

    private void clustersTypesListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_clustersTypesListValueChanged
         if (clustersTypesList.getSelectedValue() != null) {
            HashSet<String> clusters = typeToClusters.get(clustersTypesList.getSelectedValue().toString());
            DefaultListModel model = new DefaultListModel();

            for (String clusterName : clusters) {
                    model.addElement(clusterName);
            }
            clustersList.setModel(model);
        } 
    }//GEN-LAST:event_clustersTypesListValueChanged

    private void componentNameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_componentNameFieldFocusGained
        this.componentNameField.setSelectionStart(0);
        this.componentNameField.setSelectionEnd(this.componentNameField.getText().length());
    }//GEN-LAST:event_componentNameFieldFocusGained

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSplitPane ClusterClassesPanel;
    private javax.swing.JSplitPane ListsButtonPanel;
    private javax.swing.JSplitPane TopBottomPanel;
    private javax.swing.JLabel classesLabel;
    private javax.swing.JList classesList;
    private javax.swing.JLabel clustersLabel;
    private javax.swing.JList clustersList;
    private javax.swing.JLabel clustersTypeLabel;
    private javax.swing.JList clustersTypesList;
    private javax.swing.JTextField componentNameField;
    private javax.swing.JLabel componentNameLabel;
    private javax.swing.JButton generateButton;
    private javax.swing.JTextArea generatedFilesArea;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton showFiles;
    // End of variables declaration//GEN-END:variables
}
