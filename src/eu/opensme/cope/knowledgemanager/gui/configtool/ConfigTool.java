/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ConfigTool.java
 *
 * Created on Sep 11, 2011, 8:45:46 PM
 */
package eu.opensme.cope.knowledgemanager.gui.configtool;

import eu.opensme.cope.knowledgemanager.api.ReuseApi;
import eu.opensme.cope.knowledgemanager.api.actions.Import;
import eu.opensme.cope.knowledgemanager.database.Database;
import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.openrdf.query.MalformedQueryException;
import org.openrdf.repository.RepositoryException;
import org.openrdf.repository.config.RepositoryConfigException;

/**
 *
 * @author George
 */
public class ConfigTool extends javax.swing.JFrame {

    Properties properties;

    /** Creates new form ConfigTool */
    public ConfigTool() throws Exception {
        initComponents();
        getRepositoryInfo();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldRepositoryURL = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldRepositoryName = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jButtonApply = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();
        jButtonImportOntology = new javax.swing.JButton();
        jLabelLoading = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Repository Configuration Tool");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(245, 245, 245));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(61, 128, 185), 2, true), "Repository Configuration", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(238, 52, 0))); // NOI18N

        jLabel1.setText("Repository URL (e.g. http://localhost:8084/openrdf-sesame)");

        jTextFieldRepositoryURL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldRepositoryURLKeyTyped(evt);
            }
        });

        jLabel2.setText("Repository Name (e.g. opensme)");

        jTextFieldRepositoryName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldRepositoryNameKeyTyped(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(245, 245, 245));

        jButtonApply.setText("Apply");
        jButtonApply.setMargin(new java.awt.Insets(2, 4, 2, 4));
        jButtonApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonApplyActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonApply);

        jButtonClose.setText("Close");
        jButtonClose.setMargin(new java.awt.Insets(2, 4, 2, 4));
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonClose);

        jButtonImportOntology.setForeground(new java.awt.Color(0, 102, 255));
        jButtonImportOntology.setText("Import Ontology");
        jButtonImportOntology.setActionCommand("Import Ontology");
        jButtonImportOntology.setBorderPainted(false);
        jButtonImportOntology.setContentAreaFilled(false);
        jButtonImportOntology.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonImportOntology.setOpaque(false);
        jButtonImportOntology.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImportOntologyActionPerformed(evt);
            }
        });

        jLabelLoading.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelLoading.setForeground(new java.awt.Color(51, 102, 255));
        jLabelLoading.setText("Please wait....");
        jLabelLoading.setVisible(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldRepositoryURL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldRepositoryName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabelLoading, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonImportOntology)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldRepositoryURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldRepositoryName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonImportOntology)
                    .addComponent(jLabelLoading))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-443)/2, (screenSize.height-277)/2, 443, 277);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonCloseActionPerformed

    private void jButtonApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonApplyActionPerformed
        String name = jTextFieldRepositoryName.getText();
        String url = jTextFieldRepositoryURL.getText();
        if (url.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Give a repository url.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Give a repository name.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        properties.put("URL", url);
        properties.put("Name", name);
        try {
            ConfigUtils.writePropertyFile(properties);
            JOptionPane.showMessageDialog(this, "Repository Updated.");
            jButtonImportOntology.setEnabled(true);
            jButtonImportOntology.setForeground(Color.BLUE);
        } catch (Exception ex) {
            Logger.getLogger(ConfigTool.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonApplyActionPerformed

    private void jButtonImportOntologyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImportOntologyActionPerformed
        String name = jTextFieldRepositoryName.getText();
        String url = jTextFieldRepositoryURL.getText();
        if (url.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Give a repository url.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Give a repository name.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        jFileChooser1.setDialogTitle("Import OpenSME Ontology");
        jFileChooser1.setFileFilter(new SimpleFilter("owl", "(.owl) OWL Ontology"));
        jFileChooser1.setDialogType(JFileChooser.OPEN_DIALOG);
        jFileChooser1.setMultiSelectionEnabled(false);
        jFileChooser1.setAcceptAllFileFilterUsed(false);
        jFileChooser1.setCurrentDirectory(new File("."));

        if (jFileChooser1.showOpenDialog(null) != JFileChooser.APPROVE_OPTION) {
            return;
        }

        final File onto = jFileChooser1.getSelectedFile();
        jLabelLoading.setVisible(true);

        new Thread() {

            @Override
            public void run() {
                ReuseApi api = getAPI();
                Import imp = new Import(api);
                try {
                    imp.CleanAndLoad(onto);
                    JOptionPane.showMessageDialog(ConfigTool.this, "Successful import.", "Success", JOptionPane.INFORMATION_MESSAGE);
                } catch (RepositoryException ex) {
                    JOptionPane.showMessageDialog(ConfigTool.this, "Error", "Error", JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(ConfigTool.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    jLabelLoading.setVisible(false);
                    api.getDatabase().close();
                }
            }
        }.start();






    }//GEN-LAST:event_jButtonImportOntologyActionPerformed

    private void jTextFieldRepositoryURLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldRepositoryURLKeyTyped
       jButtonImportOntology.setEnabled(false);
       jButtonImportOntology.setForeground(Color.gray);
    }//GEN-LAST:event_jTextFieldRepositoryURLKeyTyped

    private void jTextFieldRepositoryNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldRepositoryNameKeyTyped
        jButtonImportOntology.setEnabled(false);
        jButtonImportOntology.setForeground(Color.gray);
    }//GEN-LAST:event_jTextFieldRepositoryNameKeyTyped

    private ReuseApi getAPI() {
        ReuseApi api = null;
        try {
            api = new ReuseApi();
        } catch (RepositoryException ex) {
            JOptionPane.showMessageDialog(this, "Cannot find the repository", "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(ConfigTool.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RepositoryConfigException ex) {
            JOptionPane.showMessageDialog(this, "Cannot find the repository", "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(ConfigTool.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Cannot find the repository", "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(ConfigTool.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally {
            return api;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfigTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfigTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfigTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfigTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    new ConfigTool().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(ConfigTool.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonApply;
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonImportOntology;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelLoading;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextFieldRepositoryName;
    private javax.swing.JTextField jTextFieldRepositoryURL;
    // End of variables declaration//GEN-END:variables

    private void getRepositoryInfo() throws Exception {
        properties = ConfigUtils.readPropertyFile();
        if (properties != null) {
            jTextFieldRepositoryURL.setText(properties.getProperty("URL"));
            jTextFieldRepositoryName.setText(properties.getProperty("Name"));
        }
    }
}
